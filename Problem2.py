#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

#Fast Doubling algorithm 

def fib(n):
    if n<=2:
        return 1
    y=n/2
    a=fib(y+1)
    b=fib(y)
    if n%2==1:
        return a*a+b*b # 2: F(2k+1) = F(k+1)^2 + F(k)^2
    else:
        return b*(2*a - b) # 1: F(2k) = F(k)[2F(k+1) - F(k)]

n,i=0,0
while fib(i)<=4000000:
    if fib(i)%2==0:
        n+=fib(i)
    i+=1
print n
        






    
